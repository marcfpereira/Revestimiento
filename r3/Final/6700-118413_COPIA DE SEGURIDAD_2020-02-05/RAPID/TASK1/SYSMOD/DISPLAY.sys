
MODULE DISPLAY(SYSMODULE)
	!
	!
	! Routines:
	! set_home: do_Home output control
	! check_home_pos: check robot home position
	! Wait_cycle_start: waiting cycle start
	! Wait_input: waiting input
	! End_of_cycle: end of cycle hand shake
	! Application_fault: application fault
	!  
    CONST jointtarget jpos_Reposo_R:=[[125.815,-38.3671,-4.5612,86.5967,-81.8986,-42.7584],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR jointtarget jposActual_rob:=[[0,0,0,0,0,0],[120,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR bool b_reposo_robot:=FALSE;
    !
	VAR num Superv_Mov:=0;
	PROC set_home()
		!==========================
		! do_Home_R3 output control
		! set up at Power On
		!==========================
		!
		jpos_Home_old1 := home_pos_rob;
		WZHomeJointDef\Inside, joint_space, home_pos_rob, delta_pos;
		WZDOSet\Stat, wz_home\Inside, joint_space, do_Home_R3, 1;
		!
		!=============
		!EXIT PROGRAM
		!=============
	ENDPROC
    
    PROC Check_homepos()
    ! Comprobacion: ROBOT REPOSO
  	! Almacenar posicon actual
    jposActual_rob:=CJointT();
    ! Obtencion valor confirmacion ROBOT REPOSO
    ! EJES: Axis1 - Axis2
    nDif_pos1:=Abs(jpos_Reposo_R.robax.rax_1-jposActual_rob.robax.rax_1)+Abs(jpos_Reposo_R.robax.rax_2-jposActual_rob.robax.rax_2);
    ! EJES: Axis3 - Axis4
    nDif_pos2:=Abs(jpos_Reposo_R.robax.rax_3-jposActual_rob.robax.rax_3)+Abs(jpos_Reposo_R.robax.rax_4-jposActual_rob.robax.rax_4);
    ! EJES: Axis5 - Axis6
    nDif_pos3:=Abs(jpos_Reposo_R.robax.rax_5-jposActual_rob.robax.rax_5)+Abs(jpos_Reposo_R.robax.rax_6-jposActual_rob.robax.rax_6);
    nDif_pos:=nDif_pos1+nDif_pos2+nDif_pos3;
    ! Analisis: ROBOT EN POSICION REPOSO
    !IF Abs(nDif_pos)<1 THEN
    	!b_reposo_robot:=TRUE;
    IF do_Home_R3=1 THEN 
    	b_reposo_robot:=TRUE;        
    ELSE
      TPErase;
      TPReadFK nteclas, "ROBOT FUERA DE REPOSO             IR A REPOSO AUTOMATICAMENTE ?", "", "SI", "", "NO", "";
      TEST nteclas
      	CASE 2:
      		! MOVIMIENTO AUTOMATICO
        	VelSet 100,100;
          home_robot;
          b_reposo_robot:=TRUE;
          VelSet 100,6000;
        CASE 4:
        	! MOVIMIENTO MANUAL
          TPErase;
          TPWrite " ";
          TPWrite "                            ";
          TPWrite " LLEVAR EL ROBOT A POSICION "; 
          TPWrite "   DE REPOSO MANUALMENTE    ";
          TPWrite "                            ";
          TPWrite "  EJECUTAR EN MODO MANUAL   ";
          TPWrite "    TRAY.: reposo_robot     ";
          TPWrite "                            ";
          TPWrite " ";
          WaitTime 5;
          Check_homepos;
      ENDTEST
    ENDIF
	ENDPROC

	PROC Wait_cycle_start()
		!=====================
		! Waiting cycle start
		!=====================
		!
		ClkStop ck_Tiempo_ciclo;
		tiempo_ciclo_s5:=ValToStr(ClkRead(ck_Tiempo_ciclo));
		Check_homepos;
		TPErase;
		WHILE DInput(di_CycleStart)=low DO
			UIMsgBox\Header:="Arranque ciclo R3", "ROBOT EN HOME"\MsgLine2:=""\MsgLine3:="ESPERA ARRANQUE DE CICLO"\Buttons:=btnOk\Icon:=iconInfo\DIBreak:=di_CycleStart\BreakFlag:=err_var_s5;
			UIMsgBox\Header:="  Ciclo  R3", " Ultimo tiempo de ciclo (sg)= "\MsgLine2:=tiempo_ciclo_s5\MsgLine3:="sg"\Wrap\Buttons:=btnOk\Icon:=iconInfo\DIBreak:=di_CycleStart\BreakFlag:=err_var_s5;
			IF DOutput(do_Home_R3)=0 Check_homepos;
		ENDWHILE
		ClkReset ck_Tiempo_ciclo;
		Reset do_EOCycle;
		Reset do_EOCycle2;
		ClkStart ck_Tiempo_ciclo;
		!
		!=============
		!EXIT PROGRAM
		!=============
	ENDPROC

	PROC Wait_input(
		VAR signaldi Input,
		num State
		\string Message)
		!
		! Waiting input
		IF Input<>State THEN
			IF NOT Present(Message) Message:=" ";
			IF State=0 THEN 
				WHILE Input<>State DO
					UIMsgBox\Header:="Info. Entradas R3", " Esperando "\MsgLine2:=Message\MsgLine3:="a 0"\Wrap\Buttons:=btnNone\Icon:=iconWarning\MaxTime:=0.5\BreakFlag:=err_var_s5;
				ENDWHILE
			ELSE
				UIMsgBox\Header:="Info. Entradas R3", " Esperando "\MsgLine2:=Message\MsgLine3:="a 1"\Wrap\Buttons:=btnNone\Icon:=iconWarning\DIBreak:=Input\BreakFlag:=err_var_s5;      
			ENDIF
			WaitDI Input,State;
		ENDIF
		!
		!=============
		!EXIT PROGRAM
		!============= 
	ENDPROC

	PROC Applic_fault(
		string Fault,
		string Reason)
		!
		! Application fault
		Set do_Fallo_aplic;
		UIMsgBox\Header:="Error de aplicación R3", Fault\MsgLine2:="---------------------------------------------"\MsgLine3:=Reason\Buttons:=btnOk\Icon:=iconError;
		Reset do_Fallo_aplic;
		!
		!=============
		!EXIT PROGRAM
		!=============
	ENDPROC
	PROC Check_Superv_Mov()
	  !WHILE DOutput(do_Mot_Sup_On) = 0 DO
		!Set do_Fallo_aplic;
		!TPReadFK Superv_Mov, "SUPERVISION DE MOVIMIENTO DESACTIVADO    ACTIVAR DESDE PANEL CONTROL", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
		!Reset do_Fallo_aplic;
	  !ENDWHILE
	ENDPROC
	PROC UtilEstadard1()
		MoveJ [[-2041.71,2283.44,1349.37],[0.0726204,-0.578585,0.406811,0.703186],[1,-1,0,1],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]], v1000, z50, tool0;
	ENDPROC
	
ENDMODULE
